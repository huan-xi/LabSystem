<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huanxi.labsystem.dao.mapper.VpnuserMapper">
  <resultMap id="BaseResultMap" type="com.huanxi.labsystem.dao.pojo.Vpnuser">
    <id column="vpn_id" jdbcType="INTEGER" property="vpnId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="send" jdbcType="BIGINT" property="send" />
    <result column="recv" jdbcType="BIGINT" property="recv" />
    <result column="max_flow" jdbcType="BIGINT" property="maxFlow" />
    <result column="end_time" jdbcType="BIGINT" property="endTime" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="status" jdbcType="CHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    vpn_id, user_id, send, recv, max_flow, end_time, create_time, username, password, 
    status
  </sql>
  <select id="selectByExample" parameterType="com.huanxi.labsystem.dao.pojo.VpnuserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vpnuser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vpnuser
    where vpn_id = #{vpnId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from vpnuser
    where vpn_id = #{vpnId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.huanxi.labsystem.dao.pojo.VpnuserExample">
    delete from vpnuser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huanxi.labsystem.dao.pojo.Vpnuser">
    insert into vpnuser (vpn_id, user_id, send, 
      recv, max_flow, end_time, 
      create_time, username, password, 
      status)
    values (#{vpnId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{send,jdbcType=BIGINT}, 
      #{recv,jdbcType=BIGINT}, #{maxFlow,jdbcType=BIGINT}, #{endTime,jdbcType=BIGINT}, 
      #{createTime,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.huanxi.labsystem.dao.pojo.Vpnuser">
    insert into vpnuser
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="vpnId != null">
        vpn_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="send != null">
        send,
      </if>
      <if test="recv != null">
        recv,
      </if>
      <if test="maxFlow != null">
        max_flow,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="vpnId != null">
        #{vpnId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="send != null">
        #{send,jdbcType=BIGINT},
      </if>
      <if test="recv != null">
        #{recv,jdbcType=BIGINT},
      </if>
      <if test="maxFlow != null">
        #{maxFlow,jdbcType=BIGINT},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.huanxi.labsystem.dao.pojo.VpnuserExample" resultType="java.lang.Long">
    select count(*) from vpnuser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update vpnuser
    <set>
      <if test="record.vpnId != null">
        vpn_id = #{record.vpnId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.send != null">
        send = #{record.send,jdbcType=BIGINT},
      </if>
      <if test="record.recv != null">
        recv = #{record.recv,jdbcType=BIGINT},
      </if>
      <if test="record.maxFlow != null">
        max_flow = #{record.maxFlow,jdbcType=BIGINT},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update vpnuser
    set vpn_id = #{record.vpnId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      send = #{record.send,jdbcType=BIGINT},
      recv = #{record.recv,jdbcType=BIGINT},
      max_flow = #{record.maxFlow,jdbcType=BIGINT},
      end_time = #{record.endTime,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huanxi.labsystem.dao.pojo.Vpnuser">
    update vpnuser
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="send != null">
        send = #{send,jdbcType=BIGINT},
      </if>
      <if test="recv != null">
        recv = #{recv,jdbcType=BIGINT},
      </if>
      <if test="maxFlow != null">
        max_flow = #{maxFlow,jdbcType=BIGINT},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
    </set>
    where vpn_id = #{vpnId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huanxi.labsystem.dao.pojo.Vpnuser">
    update vpnuser
    set user_id = #{userId,jdbcType=INTEGER},
      send = #{send,jdbcType=BIGINT},
      recv = #{recv,jdbcType=BIGINT},
      max_flow = #{maxFlow,jdbcType=BIGINT},
      end_time = #{endTime,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR}
    where vpn_id = #{vpnId,jdbcType=INTEGER}
  </update>
</mapper>